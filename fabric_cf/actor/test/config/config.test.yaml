# MIT License
#
# Copyright (c) 2020 FABRIC Testbed
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Author Komal Thareja (kthare10@renci.org)

# After making modifications to this file, please restart actor to re-read it.

# This file is a sample; to alter a particular value, uncomment it, and set as desired.
# actor will use sane defaults, in the absence of this configuration file.

runtime:
  kafka-server:  localhost:19092
  kafka-schema-registry-url: http://localhost:8081
  kafka-key-schema: ../../schema/key.avsc
  kafka-value-schema: ../../schema/message.avsc
  kafka-ssl-ca-location:  ../../../../../secrets/snakeoil-ca-1.crt
  kafka-ssl-certificate-location:  ../../../../../secrets/kafkacat1-ca1-signed.pem
  kafka-ssl-key-location:  ../../../../../secrets/kafkacat1.client.key
  kafka-ssl-key-password:  fabric
  kafka-security-protocol: PLAINTEXT
  kafka-group-id: fabric-cf
  kafka-sasl-mechanism:
  kafka-sasl-producer-username:
  kafka-sasl-producer-password:
  kafka-sasl-consumer-username:
  kafka-sasl-consumer-password:
  prometheus.port: 11000

logging:
  ## The directory in which actor should create log files.
  ## This directory will be automatically created if it does not exist.
  log-directory: .

  ## The filename to be used for actor's log file.
  log-file: actor.log

  ## The default log level for actor.
  log-level: DEBUG

  ## actor rotates log files. You may specify how many archived log files to keep here.
  log-retain: 5

  ## actor rotates log files after they exceed a certain size.
  ## You may specify the file size that results in a log file being rotated here.
  log-size: 5000000

  logger: site1-am

oauth:
  jwks-url: https://alpha-2.fabric-testbed.net/certs
  # Uses HH:MM:SS (less than 24 hours)
  key-refresh: 00:10:00
  verify-exp: False

database:
  db-user: fabric
  db-password: fabric
  db-name: test
  db-host: localhost:5432

container:
  container.guid: site1-am-conainer

time:
  # This section controls settings, which are generally useful
  # when running under emulation. These settings allow you to
  # control notion of time.

  # Beginning of time (in unix time).
  # The default is -1, which translates into using the current time as
  # the beginning of time for the container's internal clock.
  time.startTime: -1

  # Internal tick length (in milliseconds)
  time.cycleMillis: 1000
  # The number of the first tick
  time.firstTick: 0

  # This property controls if time advances automatically (false) or
  # manually (true)
  time.manual: false

pdp:
  url: http://localhost:8082/services/pdp
  enable: False

neo4j:
  url: bolt://localhost:7687
  user: neo4j
  pass: password
  import_host_dir: ../../../neo4j1/imports/
  import_dir: /imports

actor:
  type: authority
  name: site1-am
  guid: site1-am-guid
  description: Site AM
  kafka-topic: site1-am-topic
  substrate.file: ../../../neo4j/RENCI-ad.graphml
  policy:
      module: fabric_cf.actor.core.policy.authority_calendar_policy
      class: AuthorityCalendarPolicy
  resources:
      - resource:
            type: VM
            label: VM AM
            description: VM AM
            handler:
              module: fabric_cf.actor.handlers.no_op_handler
              class: NoOpHandler
  controls:
      - control:
          type: VM, Container, Baremetal
          module: fabric_cf.actor.core.policy.network_node_control
          class: NetworkNodeControl

peers:
  - peer:
        name: orchestrator
        type: orchestrator
        guid: orchestrator-guid
        kafka-topic: orchestrator-topic
  - peer:
        name: broker
        type: broker
        guid: broker-guid
        kafka-topic: broker-topic
        delegation: primary
