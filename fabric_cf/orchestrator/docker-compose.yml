version: '3.6'
services:
  nginx:
    image: library/nginx:1
    container_name: orchestrator-nginx
    depends_on:
      - orchestrator    
    networks:
      - frontend
      - backend    
    ports:
      - 0.0.0.0:443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs/fullchain.pem:/etc/ssl/public.pem
      - ./certs/privkey.pem:/etc/ssl/private.pem
    restart: always
  neo4j:
    image: fabrictestbed/neo4j-apoc:4.0.3
    container_name: orchestrator-neo4j
    restart: always
    user: ${NEO4J_UID:-1000}:${NEO4J_GID:-1000}
    networks:
      - frontend
      - backend
    volumes:
      - ${NEO4J_DATA_PATH_HOST:-$(pwd)/neo4j/data}:${NEO4J_DATA_PATH_DOCKER:-/data}
      - ${NEO4J_IMPORTS_PATH_HOST:-$(pwd)/neo4j/imports}:${NEO4J_IMPORTS_PATH_DOCKER:-/imports}
      - ${NEO4J_LOGS_PATH_HOST:-$(pwd)/neo4j/logs}:${NEO4J_LOGS_PATH_DOCKER:-/logs}
      - ../../../neo4j/certs/fullchain.pem:/ssl/neo4j.cert:ro  # SSL development certificate
      - ../../../neo4j/certs/privkey.pem:/ssl/neo4j.key:ro     # SSL development key
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASS:-password}
      - NEO4J_dbms_connector_bolt_advertised__address=${NEO4J_dbms_connector_bolt_advertised__address:-0.0.0.0:7687}
      - NEO4J_dbms_connector_bolt_listen__address=${NEO4J_dbms_connector_bolt_advertised__address:-0.0.0.0:7687}
      - NEO4J_dbms_connector_http_advertised__address=${NEO4J_dbms_connector_http_advertised__address:-0.0.0.0:7474}
      - NEO4J_dbms_connector_http_listen__address=${NEO4J_dbms_connector_http_advertised__address:-0.0.0.0:7474}
      - NEO4J_dbms_connector_https_advertised__address=${NEO4J_dbms_connector_https_advertised__address:-0.0.0.0:7473}
      - NEO4J_dbms_connector_https_listen__address=${NEO4J_dbms_connector_https_advertised__address:-0.0.0.0:7473}
  database:
    image: fabrictestbed/postgres:12.3
    container_name: orchestrator-db
    restart: always
    networks:
      - backend
    volumes:
      - ./pg_data/data:${PGDATA:-/var/lib/postgresql/data}
      - ./pg_data/logs:${POSTGRES_INITDB_WALDIR:-/var/log/postgresql}
    environment:
       - POSTGRES_HOST=${POSTGRES_HOST:-database}
       - POSTGRES_PORT=5432
       - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_DB:-postgres}
       - POSTGRES_USER=${POSTGRES_USER:-postgres}
       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-orchestrator}
       - PGDATA=${PGDATA:-/var/lib/postgresql/data}
  pdp:
    image: fabrictestbed/authzforce-pdp:6.0.1
    container_name: orchestrator-pdp
    restart: always
    user: ${PDP_UID:-1000}:${PDP_GID:-1000}
    networks:
      - backend
    volumes:
      - ${PDP_NEW_CONF_PATH_HOST:-$(pwd)/newconf}:/conf
      - ${PDP_NEW_POLICIES_PATH_HOST:-$(pwd)/newpolicies}:/policies
  orchestrator:
    build:
      context: ../../../
      dockerfile: Dockerfile-orchestrator
    image: orchestrator:1.4.5
    container_name: orchestrator
    restart: always
    depends_on:
      - database
      - neo4j
    networks:
      - frontend
      - backend
    volumes:
      - ./neo4j:/usr/src/app/neo4j
      - ./config.yaml:/etc/fabric/actor/config/config.yaml
      - ./logs/:/var/log/actor
      - ../../../secrets/snakeoil-ca-1.crt:/etc/fabric/message_bus/ssl/cacert.pem
      - ../../../secrets/kafkacat1.client.key:/etc/fabric/message_bus/ssl/client.key
      - ../../../secrets/kafkacat1-ca1-signed.pem:/etc/fabric/message_bus/ssl/client.pem
      #- ./state_recovery.lock:/usr/src/app/state_recovery.lock
networks:
  frontend:
  backend:
    internal: true
