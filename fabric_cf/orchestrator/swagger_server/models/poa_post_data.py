# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fabric_cf.orchestrator.swagger_server.models.base_model_ import Model
from fabric_cf.orchestrator.swagger_server.models.poa_post_data_vcpu_cpu_map import PoaPostDataVcpuCpuMap  # noqa: F401,E501
from fabric_cf.orchestrator.swagger_server import util


class PoaPostData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, vcpu_cpu_map: List[PoaPostDataVcpuCpuMap]=None, node_set: List[str]=None, keys: List[str]=None):  # noqa: E501
        """PoaPostData - a model defined in Swagger

        :param vcpu_cpu_map: The vcpu_cpu_map of this PoaPostData.  # noqa: E501
        :type vcpu_cpu_map: List[PoaPostDataVcpuCpuMap]
        :param node_set: The node_set of this PoaPostData.  # noqa: E501
        :type node_set: List[str]
        :param keys: The keys of this PoaPostData.  # noqa: E501
        :type keys: List[str]
        """
        self.swagger_types = {
            'vcpu_cpu_map': List[PoaPostDataVcpuCpuMap],
            'node_set': List[str],
            'keys': List[str]
        }

        self.attribute_map = {
            'vcpu_cpu_map': 'vcpu_cpu_map',
            'node_set': 'node_set',
            'keys': 'keys'
        }
        self._vcpu_cpu_map = vcpu_cpu_map
        self._node_set = node_set
        self._keys = keys

    @classmethod
    def from_dict(cls, dikt) -> 'PoaPostData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The poa_post_data of this PoaPostData.  # noqa: E501
        :rtype: PoaPostData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vcpu_cpu_map(self) -> List[PoaPostDataVcpuCpuMap]:
        """Gets the vcpu_cpu_map of this PoaPostData.


        :return: The vcpu_cpu_map of this PoaPostData.
        :rtype: List[PoaPostDataVcpuCpuMap]
        """
        return self._vcpu_cpu_map

    @vcpu_cpu_map.setter
    def vcpu_cpu_map(self, vcpu_cpu_map: List[PoaPostDataVcpuCpuMap]):
        """Sets the vcpu_cpu_map of this PoaPostData.


        :param vcpu_cpu_map: The vcpu_cpu_map of this PoaPostData.
        :type vcpu_cpu_map: List[PoaPostDataVcpuCpuMap]
        """

        self._vcpu_cpu_map = vcpu_cpu_map

    @property
    def node_set(self) -> List[str]:
        """Gets the node_set of this PoaPostData.


        :return: The node_set of this PoaPostData.
        :rtype: List[str]
        """
        return self._node_set

    @node_set.setter
    def node_set(self, node_set: List[str]):
        """Sets the node_set of this PoaPostData.


        :param node_set: The node_set of this PoaPostData.
        :type node_set: List[str]
        """

        self._node_set = node_set

    @property
    def keys(self) -> List[str]:
        """Gets the keys of this PoaPostData.


        :return: The keys of this PoaPostData.
        :rtype: List[str]
        """
        return self._keys

    @keys.setter
    def keys(self, keys: List[str]):
        """Sets the keys of this PoaPostData.


        :param keys: The keys of this PoaPostData.
        :type keys: List[str]
        """

        self._keys = keys
