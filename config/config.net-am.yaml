# MIT License
#
# Copyright (c) 2020 FABRIC Testbed
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# Author Komal Thareja (kthare10@renci.org)

# After making modifications to this file, please restart actor to re-read it.

# This file is a sample; to alter a particular value, uncomment it, and set as desired.
# actor will use sane defaults, in the absence of this configuration file.

runtime:
  - plugin-dir: ./plugins
  - kafka-server: localhost:19092
  - kafka-schema-registry-url: http://localhost:8081
  - kafka-key-schema: /etc/fabric/message_bus/schema/key.avsc
  - kafka-value-schema: /etc/fabric/message_bus/schema/message.avsc
  - kafka-ssl-ca-location:  /etc/fabric/message_bus/ssl/cacert.pem
  - kafka-ssl-certificate-location:  /etc/fabric/message_bus/ssl/client.pem
  - kafka-ssl-key-location:  /etc/fabric/message_bus/ssl/client.key
  - kafka-ssl-key-password:  fabric
  - kafka-security-protocol: SSL
  - kafka-group-id: fabric-cf
  - prometheus.port: 11300

logging:
  ## The directory in which actor should create log files.
  ## This directory will be automatically created if it does not exist.
  - log-directory: /var/log/actor

  ## The filename to be used for actor's log file.
  - log-file: actor.log

  ## The default log level for actor.
  - log-level: DEBUG

  ## actor rotates log files. You may specify how many archived log files to keep here.
  - log-retain: 5

  ## actor rotates log files after they exceed a certain size.
  ## You may specify the file size that results in a log file being rotated here.
  - log-size: 5000000

  - logger: fabric-site-am

oauth:
  - token-public-key: /etc/fabric/message_bus/ssl/credmgr.pem

database:
  - db-user: fabric
  - db-password: fabric
  - db-name: am
  - db-host: localhost:8432

container:
  - container.guid: fabric-site-am-conainer

time:
  # This section controls settings, which are generally useful
  # when running under emulation. These settings allow you to
  # control notion of time.

  # Beginning of time (in unix time).
  # The default is -1, which translates into using the current time as
  # the beginning of time for the container's internal clock.
  - time.startTime: -1

  # Internal tick length (in milliseconds)
  - time.cycleMillis: 1000

  # The number of the first tick
  - time.firstTick: 0

  # This property controls if time advances automatically (false) or
  # manually (true)
  - time.manual: false

neo4j:
  url: neo4j://0.0.0.0:7687
  user: neo4j
  pass: password
  import_host_dir: ./neo4j/imports/
  import_dir: /imports

actor:
  - type: authority
  - name: fabric-net-am
  - guid: fabric-net-am-guid
  - description: Site AM
  - kafka-topic: fabric-net-am-topic
  - substrate.file: /etc/fabric/actor/handlers/neo4j/net-am-2broker-ad-enumerated.graphml
  - resources:
       - resource:
        - resource_module: fim.slivers.attached_pci_devices
        - resource_class: AttachedPCIDevices
        - type: site.vlan
        - label: Network Vlan
        - description: Network Vlan
        - handler:
          - module: fabric_cf.actor.plugins.vlan
          - class: Dummy
          - properties:
              - quantum-vlan.properties: handlers/quantum-vlan.properties
        - attributes:
            - attribute:
                - key: resource.class.invfortype
                - type: Class
                - value: fabric_cf.actor.core.policy.simpler_units_inventory.SimplerUnitsInventory
        - control:
          - type: site.vlan
          - module: fabric_cf.actor.core.policy.vlan_control
          - class: VlanControl
peers:
  - peer:
    - name: fabric-orchestrator
    - type: orchestrator
    - guid: fabric-orchestrator-guid
    - kafka-topic: fabric-orchestrator-topic
  - peer:
    - name: fabric-broker
    - type: broker
    - guid: fabric-broker-guid
    - kafka-topic: fabric-broker-topic
    - delegation: del1